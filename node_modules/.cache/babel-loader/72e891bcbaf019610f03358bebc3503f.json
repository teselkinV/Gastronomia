{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vladimir/Desktop/Gastronomia/src/components/Darkmode/Darkmode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './darkmode.css';\n\nfunction Darkmode() {\n  _s();\n\n  const [mode, setMode] = useState(() => localStorage.getItem(\"mode\"));\n  useEffect(() => {\n    window.addEventListener(\"storage\", setPreferedTheme);\n    return () => {\n      window.removeEventListener(\"storage\", setPreferedTheme);\n    };\n  });\n\n  function getPrefMode() {\n    if (!window.matchMedia) return;\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  }\n\n  const setPreferedTheme = () => {\n    const _mode = localStorage.getItem(\"mode\"); // const userPreference = getPrefMode();\n\n\n    if (_mode) {\n      setMode(_mode);\n    } else {\n      setMode(\"light\");\n    }\n  };\n\n  useEffect(() => {\n    if (mode === \"dark\") {\n      document.body.classList.add(\"dark-mode\");\n      localStorage.setItem(\"mode\", \"dark\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n      localStorage.setItem(\"mode\", \"light\");\n    }\n  }, [mode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cursor-pointer\",\n    onClick: () => setMode(mode => mode === \"dark\" ? \"light\" : \"dark\"),\n    children: /*#__PURE__*/_jsxDEV(\"small\", {\n      children: [\" \", mode === \"dark\" ? \"Light\" : \"Dark\", \" Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Darkmode, \"xyNf/8YOl9TLU+aaFWhm479nw+o=\");\n\n_c = Darkmode;\nexport default Darkmode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Darkmode\");","map":{"version":3,"sources":["/Users/vladimir/Desktop/Gastronomia/src/components/Darkmode/Darkmode.js"],"names":["React","useState","useEffect","Darkmode","mode","setMode","localStorage","getItem","window","addEventListener","setPreferedTheme","removeEventListener","getPrefMode","matchMedia","matches","_mode","document","body","classList","add","setItem","remove"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,MAAMK,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAP,CAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,gBAAnC;AACA,WAAO,MAAM;AACTF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsCD,gBAAtC;AACH,KAFD;AAGH,GALQ,CAAT;;AAOA,WAASE,WAAT,GAAuB;AACnB,QAAG,CAACJ,MAAM,CAACK,UAAX,EAAuB;AACvB,WAAOL,MAAM,CAACK,UAAP,CAAkB,8BAAlB,EAAkDC,OAAzD;AACD;;AAEH,QAAMJ,gBAAgB,GAAG,MAAM;AAC3B,UAAMK,KAAK,GAAGT,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd,CAD2B,CAE3B;;;AACA,QAAIQ,KAAJ,EAAW;AACPV,MAAAA,OAAO,CAACU,KAAD,CAAP;AACH,KAFD,MAEO;AACHV,MAAAA,OAAO,CAAC,OAAD,CAAP;AACH;AACJ,GARD;;AAYAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIE,IAAI,KAAK,MAAb,EAAqB;AACjBY,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,WAA5B;AACAb,MAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6B,MAA7B;AACH,KAHD,MAGO;AACHJ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,WAA/B;AACAf,MAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6B,OAA7B;AACH;AACJ,GARQ,EAQN,CAAChB,IAAD,CARM,CAAT;AAUA,sBACI;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,OAAO,EAAE,MACLC,OAAO,CAACD,IAAI,IAAKA,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAAtC,CAHf;AAAA,2BAMI;AAAA,sBAASA,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA/CQD,Q;;KAAAA,Q;AAiDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './darkmode.css';\n\nfunction Darkmode() {\n    const [mode, setMode] = useState(() => localStorage.getItem(\"mode\"));\n\n    useEffect(() => {\n        window.addEventListener(\"storage\", setPreferedTheme);\n        return () => {\n            window.removeEventListener(\"storage\", setPreferedTheme);\n        };\n    });\n\n    function getPrefMode() {\n        if(!window.matchMedia) return;\n        return window.matchMedia('(prefers-color-scheme: dark)').matches;\n      }\n\n    const setPreferedTheme = () => {\n        const _mode = localStorage.getItem(\"mode\");\n        // const userPreference = getPrefMode();\n        if (_mode) {\n            setMode(_mode);\n        } else {\n            setMode(\"light\");\n        }\n    };\n\n   \n\n    useEffect(() => {\n        if (mode === \"dark\") {\n            document.body.classList.add(\"dark-mode\");\n            localStorage.setItem(\"mode\", \"dark\");\n        } else {\n            document.body.classList.remove(\"dark-mode\");\n            localStorage.setItem(\"mode\", \"light\");\n        }\n    }, [mode]);\n\n    return (\n        <div\n            className=\"cursor-pointer\"\n            onClick={() =>\n                setMode(mode => (mode === \"dark\" ? \"light\" : \"dark\"))\n            }\n        >\n            <small> {mode === \"dark\" ? \"Light\" : \"Dark\"} Mode</small>\n        </div>\n    );\n}\n\nexport default Darkmode;"]},"metadata":{},"sourceType":"module"}